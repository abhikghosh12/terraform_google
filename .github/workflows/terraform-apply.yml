name: 'Terraform CI/CD'

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.0.0

    - name: Authenticate to Google Cloud
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    - name: Terraform Format
      run: terraform fmt -check -recursive
      continue-on-error: true

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate -no-color
      
    - name: Terraform import
      run: |        
        terraform import module.gke.google_container_cluster.primary projects/voice-439010/locations/europe-west4/clusters/voice-app-cluster
        terraform import module.voice_app.google_compute_address.voice_app projects/voice-439010/regions/europe-west4/addresses/voice-app-ip
    #     terraform state rm 'module.k8s_resources.kubernetes_namespace.voice_app'
    #     terraform state rm 'module.k8s_resources.kubernetes_persistent_volume.voice_app_pvs["redis-master"]'
    #     terraform state rm 'module.k8s_resources.kubernetes_persistent_volume.voice_app_pvs["redis-replicas"]'
    #     terraform state rm 'module.k8s_resources.kubernetes_persistent_volume.voice_app_pvs["voice-app-output"]'
    #     terraform state rm 'module.k8s_resources.kubernetes_persistent_volume.voice_app_pvs["voice-app-uploads"]'
  
    #     terraform state rm 'module.voice_app.kubernetes_persistent_volume_claim.voice_app_uploads'
    #     terraform state rm 'module.voice_app.kubernetes_persistent_volume_claim.voice_app_output'
    #     terraform state rm 'module.voice_app.kubernetes_persistent_volume_claim.redis_master'
    #     terraform state rm 'module.voice_app.kubernetes_persistent_volume_claim.redis_replicas'

    - name: Terraform Plan
      run: terraform plan -no-color -out=tfplan

    - name: Show Terraform Plan
      run: terraform show -no-color tfplan

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve tfplan